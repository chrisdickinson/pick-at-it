(function(){var require = function (file, cwd) {
    var resolved = require.resolve(file, cwd || '/');
    var mod = require.modules[resolved];
    if (!mod) throw new Error(
        'Failed to resolve module ' + file + ', tried ' + resolved
    );
    var cached = require.cache[resolved];
    var res = cached? cached.exports : mod();
    return res;
};

require.paths = [];
require.modules = {};
require.cache = {};
require.extensions = [".js",".coffee"];

require._core = {
    'assert': true,
    'events': true,
    'fs': true,
    'path': true,
    'vm': true
};

require.resolve = (function () {
    return function (x, cwd) {
        if (!cwd) cwd = '/';
        
        if (require._core[x]) return x;
        var path = require.modules.path();
        cwd = path.resolve('/', cwd);
        var y = cwd || '/';
        
        if (x.match(/^(?:\.\.?\/|\/)/)) {
            var m = loadAsFileSync(path.resolve(y, x))
                || loadAsDirectorySync(path.resolve(y, x));
            if (m) return m;
        }
        
        var n = loadNodeModulesSync(x, y);
        if (n) return n;
        
        throw new Error("Cannot find module '" + x + "'");
        
        function loadAsFileSync (x) {
            x = path.normalize(x);
            if (require.modules[x]) {
                return x;
            }
            
            for (var i = 0; i < require.extensions.length; i++) {
                var ext = require.extensions[i];
                if (require.modules[x + ext]) return x + ext;
            }
        }
        
        function loadAsDirectorySync (x) {
            x = x.replace(/\/+$/, '');
            var pkgfile = path.normalize(x + '/package.json');
            if (require.modules[pkgfile]) {
                var pkg = require.modules[pkgfile]();
                var b = pkg.browserify;
                if (typeof b === 'object' && b.main) {
                    var m = loadAsFileSync(path.resolve(x, b.main));
                    if (m) return m;
                }
                else if (typeof b === 'string') {
                    var m = loadAsFileSync(path.resolve(x, b));
                    if (m) return m;
                }
                else if (pkg.main) {
                    var m = loadAsFileSync(path.resolve(x, pkg.main));
                    if (m) return m;
                }
            }
            
            return loadAsFileSync(x + '/index');
        }
        
        function loadNodeModulesSync (x, start) {
            var dirs = nodeModulesPathsSync(start);
            for (var i = 0; i < dirs.length; i++) {
                var dir = dirs[i];
                var m = loadAsFileSync(dir + '/' + x);
                if (m) return m;
                var n = loadAsDirectorySync(dir + '/' + x);
                if (n) return n;
            }
            
            var m = loadAsFileSync(x);
            if (m) return m;
        }
        
        function nodeModulesPathsSync (start) {
            var parts;
            if (start === '/') parts = [ '' ];
            else parts = path.normalize(start).split('/');
            
            var dirs = [];
            for (var i = parts.length - 1; i >= 0; i--) {
                if (parts[i] === 'node_modules') continue;
                var dir = parts.slice(0, i + 1).join('/') + '/node_modules';
                dirs.push(dir);
            }
            
            return dirs;
        }
    };
})();

require.alias = function (from, to) {
    var path = require.modules.path();
    var res = null;
    try {
        res = require.resolve(from + '/package.json', '/');
    }
    catch (err) {
        res = require.resolve(from, '/');
    }
    var basedir = path.dirname(res);
    
    var keys = (Object.keys || function (obj) {
        var res = [];
        for (var key in obj) res.push(key);
        return res;
    })(require.modules);
    
    for (var i = 0; i < keys.length; i++) {
        var key = keys[i];
        if (key.slice(0, basedir.length + 1) === basedir + '/') {
            var f = key.slice(basedir.length);
            require.modules[to + f] = require.modules[basedir + f];
        }
        else if (key === basedir) {
            require.modules[to] = require.modules[basedir];
        }
    }
};

(function () {
    var process = {};
    
    require.define = function (filename, fn) {
        if (require.modules.__browserify_process) {
            process = require.modules.__browserify_process();
        }
        
        var dirname = require._core[filename]
            ? ''
            : require.modules.path().dirname(filename)
        ;
        
        var require_ = function (file) {
            var requiredModule = require(file, dirname);
            var cached = require.cache[require.resolve(file, dirname)];

            if (cached && cached.parent === null) {
                cached.parent = module_;
            }

            return requiredModule;
        };
        require_.resolve = function (name) {
            return require.resolve(name, dirname);
        };
        require_.modules = require.modules;
        require_.define = require.define;
        require_.cache = require.cache;
        var module_ = {
            id : filename,
            filename: filename,
            exports : {},
            loaded : false,
            parent: null
        };
        
        require.modules[filename] = function () {
            require.cache[filename] = module_;
            fn.call(
                module_.exports,
                require_,
                module_,
                module_.exports,
                dirname,
                filename,
                process
            );
            module_.loaded = true;
            return module_.exports;
        };
    };
})();


require.define("path",Function(['require','module','exports','__dirname','__filename','process'],"function filter (xs, fn) {\n    var res = [];\n    for (var i = 0; i < xs.length; i++) {\n        if (fn(xs[i], i, xs)) res.push(xs[i]);\n    }\n    return res;\n}\n\n// resolves . and .. elements in a path array with directory names there\n// must be no slashes, empty elements, or device names (c:\\) in the array\n// (so also no leading and trailing slashes - it does not distinguish\n// relative and absolute paths)\nfunction normalizeArray(parts, allowAboveRoot) {\n  // if the path tries to go above the root, `up` ends up > 0\n  var up = 0;\n  for (var i = parts.length; i >= 0; i--) {\n    var last = parts[i];\n    if (last == '.') {\n      parts.splice(i, 1);\n    } else if (last === '..') {\n      parts.splice(i, 1);\n      up++;\n    } else if (up) {\n      parts.splice(i, 1);\n      up--;\n    }\n  }\n\n  // if the path is allowed to go above the root, restore leading ..s\n  if (allowAboveRoot) {\n    for (; up--; up) {\n      parts.unshift('..');\n    }\n  }\n\n  return parts;\n}\n\n// Regex to split a filename into [*, dir, basename, ext]\n// posix version\nvar splitPathRe = /^(.+\\/(?!$)|\\/)?((?:.+?)?(\\.[^.]*)?)$/;\n\n// path.resolve([from ...], to)\n// posix version\nexports.resolve = function() {\nvar resolvedPath = '',\n    resolvedAbsolute = false;\n\nfor (var i = arguments.length; i >= -1 && !resolvedAbsolute; i--) {\n  var path = (i >= 0)\n      ? arguments[i]\n      : process.cwd();\n\n  // Skip empty and invalid entries\n  if (typeof path !== 'string' || !path) {\n    continue;\n  }\n\n  resolvedPath = path + '/' + resolvedPath;\n  resolvedAbsolute = path.charAt(0) === '/';\n}\n\n// At this point the path should be resolved to a full absolute path, but\n// handle relative paths to be safe (might happen when process.cwd() fails)\n\n// Normalize the path\nresolvedPath = normalizeArray(filter(resolvedPath.split('/'), function(p) {\n    return !!p;\n  }), !resolvedAbsolute).join('/');\n\n  return ((resolvedAbsolute ? '/' : '') + resolvedPath) || '.';\n};\n\n// path.normalize(path)\n// posix version\nexports.normalize = function(path) {\nvar isAbsolute = path.charAt(0) === '/',\n    trailingSlash = path.slice(-1) === '/';\n\n// Normalize the path\npath = normalizeArray(filter(path.split('/'), function(p) {\n    return !!p;\n  }), !isAbsolute).join('/');\n\n  if (!path && !isAbsolute) {\n    path = '.';\n  }\n  if (path && trailingSlash) {\n    path += '/';\n  }\n  \n  return (isAbsolute ? '/' : '') + path;\n};\n\n\n// posix version\nexports.join = function() {\n  var paths = Array.prototype.slice.call(arguments, 0);\n  return exports.normalize(filter(paths, function(p, index) {\n    return p && typeof p === 'string';\n  }).join('/'));\n};\n\n\nexports.dirname = function(path) {\n  var dir = splitPathRe.exec(path)[1] || '';\n  var isWindows = false;\n  if (!dir) {\n    // No dirname\n    return '.';\n  } else if (dir.length === 1 ||\n      (isWindows && dir.length <= 3 && dir.charAt(1) === ':')) {\n    // It is just a slash or a drive letter with a slash\n    return dir;\n  } else {\n    // It is a full dirname, strip trailing slash\n    return dir.substring(0, dir.length - 1);\n  }\n};\n\n\nexports.basename = function(path, ext) {\n  var f = splitPathRe.exec(path)[2] || '';\n  // TODO: make this comparison case-insensitive on windows?\n  if (ext && f.substr(-1 * ext.length) === ext) {\n    f = f.substr(0, f.length - ext.length);\n  }\n  return f;\n};\n\n\nexports.extname = function(path) {\n  return splitPathRe.exec(path)[3] || '';\n};\n\n//@ sourceURL=path"));

require.define("__browserify_process",Function(['require','module','exports','__dirname','__filename','process'],"var process = module.exports = {};\n\nprocess.nextTick = (function () {\n    var queue = [];\n    var canPost = typeof window !== 'undefined'\n        && window.postMessage && window.addEventListener\n    ;\n    \n    if (canPost) {\n        window.addEventListener('message', function (ev) {\n            if (ev.source === window && ev.data === 'browserify-tick') {\n                ev.stopPropagation();\n                if (queue.length > 0) {\n                    var fn = queue.shift();\n                    fn();\n                }\n            }\n        }, true);\n    }\n    \n    return function (fn) {\n        if (canPost) {\n            queue.push(fn);\n            window.postMessage('browserify-tick', '*');\n        }\n        else setTimeout(fn, 0);\n    };\n})();\n\nprocess.title = 'browser';\nprocess.browser = true;\nprocess.env = {};\nprocess.argv = [];\n\nprocess.binding = function (name) {\n    if (name === 'evals') return (require)('vm')\n    else throw new Error('No such module. (Possibly not yet loaded)')\n};\n\n(function () {\n    var cwd = '/';\n    var path;\n    process.cwd = function () { return cwd };\n    process.chdir = function (dir) {\n        if (!path) path = require('path');\n        cwd = path.resolve(dir, cwd);\n    };\n})();\n\n//@ sourceURL=__browserify_process"));

require.define("vm",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = require(\"vm-browserify\")\n//@ sourceURL=vm"));

require.define("/node_modules/vm-browserify/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/node_modules/vm-browserify/package.json"));

require.define("/node_modules/vm-browserify/index.js",Function(['require','module','exports','__dirname','__filename','process'],"var Object_keys = function (obj) {\n    if (Object.keys) return Object.keys(obj)\n    else {\n        var res = [];\n        for (var key in obj) res.push(key)\n        return res;\n    }\n};\n\nvar forEach = function (xs, fn) {\n    if (xs.forEach) return xs.forEach(fn)\n    else for (var i = 0; i < xs.length; i++) {\n        fn(xs[i], i, xs);\n    }\n};\n\nvar Script = exports.Script = function NodeScript (code) {\n    if (!(this instanceof Script)) return new Script(code);\n    this.code = code;\n};\n\nScript.prototype.runInNewContext = function (context) {\n    if (!context) context = {};\n    \n    var iframe = document.createElement('iframe');\n    if (!iframe.style) iframe.style = {};\n    iframe.style.display = 'none';\n    \n    document.body.appendChild(iframe);\n    \n    var win = iframe.contentWindow;\n    \n    forEach(Object_keys(context), function (key) {\n        win[key] = context[key];\n    });\n     \n    if (!win.eval && win.execScript) {\n        // win.eval() magically appears when this is called in IE:\n        win.execScript('null');\n    }\n    \n    var res = win.eval(this.code);\n    \n    forEach(Object_keys(win), function (key) {\n        context[key] = win[key];\n    });\n    \n    document.body.removeChild(iframe);\n    \n    return res;\n};\n\nScript.prototype.runInThisContext = function () {\n    return eval(this.code); // maybe...\n};\n\nScript.prototype.runInContext = function (context) {\n    // seems to be just runInNewContext on magical context objects which are\n    // otherwise indistinguishable from objects except plain old objects\n    // for the parameter segfaults node\n    return this.runInNewContext(context);\n};\n\nforEach(Object_keys(Script.prototype), function (name) {\n    exports[name] = Script[name] = function (code) {\n        var s = Script(code);\n        return s[name].apply(s, [].slice.call(arguments, 1));\n    };\n});\n\nexports.createScript = function (code) {\n    return exports.Script(code);\n};\n\nexports.createContext = Script.createContext = function (context) {\n    // not really sure what this one does\n    // seems to just make a shallow copy\n    var copy = {};\n    if(typeof context === 'object') {\n        forEach(Object_keys(context), function (key) {\n            copy[key] = context[key];\n        });\n    }\n    return copy;\n};\n\n//@ sourceURL=/node_modules/vm-browserify/index.js"));

require.define("/node_modules/onecolor/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"one-color-all-debug.js\"}\n//@ sourceURL=/node_modules/onecolor/package.json"));

require.define("/node_modules/onecolor/one-color-all-debug.js",Function(['require','module','exports','__dirname','__filename','process'],"/*jshint evil:true, onevar:false*/\n/*global define*/\nvar installedColorSpaces = [],\n    namedColors = {},\n    undef = function (obj) {\n        return typeof obj === 'undefined';\n    },\n    channelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)(%)?\\s*/,\n    alphaChannelRegExp = /\\s*(\\.\\d+|\\d+(?:\\.\\d+)?)\\s*/,\n    cssColorRegExp = new RegExp(\n                         \"^(rgb|hsl|hsv)a?\" +\n                         \"\\\\(\" +\n                             channelRegExp.source + \",\" +\n                             channelRegExp.source + \",\" +\n                             channelRegExp.source +\n                             \"(?:,\" + alphaChannelRegExp.source + \")?\" +\n                         \"\\\\)$\", \"i\");\n\nfunction ONECOLOR(obj) {\n    if (Object.prototype.toString.apply(obj) === '[object Array]') {\n        if (obj.length === 4) {\n            // Assumed 4 element int RGB array from canvas with all channels [0;255]\n            return new ONECOLOR.RGB(obj[0] / 255, obj[1] / 255, obj[2] / 255, obj[3] / 255);\n        } else {\n            // Assumed destringified array from one.color.JSON()\n            return new ONECOLOR[obj[0]](obj.slice(1, obj.length));\n        }\n    } else if (typeof obj === 'string') {\n        var lowerCased = obj.toLowerCase();\n        if (namedColors[lowerCased]) {\n            obj = '#' + namedColors[lowerCased];\n        }\n        // Test for CSS rgb(....) string\n        var matchCssSyntax = obj.match(cssColorRegExp);\n        if (matchCssSyntax) {\n            var colorSpaceName = matchCssSyntax[1].toUpperCase(),\n                alpha = undef(matchCssSyntax[8]) ? matchCssSyntax[8] : parseFloat(matchCssSyntax[8]),\n                hasHue = colorSpaceName[0] === 'H',\n                firstChannelDivisor = matchCssSyntax[3] ? 100 : (hasHue ? 360 : 255),\n                secondChannelDivisor = (matchCssSyntax[5] || hasHue) ? 100 : 255,\n                thirdChannelDivisor = (matchCssSyntax[7] || hasHue) ? 100 : 255;\n            if (undef(ONECOLOR[colorSpaceName])) {\n                throw new Error(\"one.color.\" + colorSpaceName + \" is not installed.\");\n            }\n            return new ONECOLOR[colorSpaceName](\n                parseFloat(matchCssSyntax[2]) / firstChannelDivisor,\n                parseFloat(matchCssSyntax[4]) / secondChannelDivisor,\n                parseFloat(matchCssSyntax[6]) / thirdChannelDivisor,\n                alpha\n            );\n        }\n        // Assume hex syntax\n        if (obj.length < 6) {\n            // Allow CSS shorthand\n            obj = obj.replace(/^#?([0-9a-f])([0-9a-f])([0-9a-f])$/i, '$1$1$2$2$3$3');\n        }\n        // Split obj into red, green, and blue components\n        var hexMatch = obj.match(/^#?([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])([0-9a-f][0-9a-f])$/i);\n        if (hexMatch) {\n            return new ONECOLOR.RGB(\n                parseInt(hexMatch[1], 16) / 255,\n                parseInt(hexMatch[2], 16) / 255,\n                parseInt(hexMatch[3], 16) / 255\n            );\n        }\n    } else if (typeof obj === 'object' && obj.isColor) {\n        return obj;\n    } else if (!isNaN(obj)) {\n        // Strange integer representation sometimes returned by document.queryCommandValue in some browser...\n        return new ONECOLOR.RGB((obj & 0xFF) / 255, ((obj & 0xFF00) >> 8) / 255, ((obj & 0xFF0000) >> 16) / 255);\n    }\n    return false;\n}\n\nfunction installColorSpace(colorSpaceName, propertyNames, config) {\n    ONECOLOR[colorSpaceName] = new Function(propertyNames.join(\",\"),\n        // Allow passing an array to the constructor:\n        \"if (Object.prototype.toString.apply(\" + propertyNames[0] + \") === '[object Array]') {\" +\n            propertyNames.map(function (propertyName, i) {\n                return propertyName + \"=\" + propertyNames[0] + \"[\" + i + \"];\";\n            }).reverse().join(\"\") +\n        \"}\" +\n        \"if (\" + propertyNames.filter(function (propertyName) {\n            return propertyName !== 'alpha';\n        }).map(function (propertyName) {\n            return \"isNaN(\" + propertyName + \")\";\n        }).join(\"||\") + \"){\" + \"throw new Error(\\\"[\" + colorSpaceName + \"]: Invalid color: (\\\"+\" + propertyNames.join(\"+\\\",\\\"+\") + \"+\\\")\\\");}\" +\n        propertyNames.map(function (propertyName) {\n            if (propertyName === 'hue') {\n                return \"this._hue=hue<0?hue-Math.floor(hue):hue%1\"; // Wrap\n            } else if (propertyName === 'alpha') {\n                return \"this._alpha=(isNaN(alpha)||alpha>1)?1:(alpha<0?0:alpha);\";\n            } else {\n                return \"this._\" + propertyName + \"=\" + propertyName + \"<0?0:(\" + propertyName + \">1?1:\" + propertyName + \")\";\n            }\n        }).join(\";\") + \";\"\n    );\n    ONECOLOR[colorSpaceName].propertyNames = propertyNames;\n\n    var prototype = ONECOLOR[colorSpaceName].prototype;\n\n    ['valueOf', 'hex', 'css', 'cssa'].forEach(function (methodName) {\n        prototype[methodName] = prototype[methodName] || (colorSpaceName === 'RGB' ? prototype.hex : new Function(\"return this.rgb().\" + methodName + \"();\"));\n    });\n\n    prototype.isColor = true;\n\n    prototype.equals = function (otherColor, epsilon) {\n        if (undef(epsilon)) {\n            epsilon = 1e-10;\n        }\n\n        otherColor = otherColor[colorSpaceName.toLowerCase()]();\n\n        for (var i = 0; i < propertyNames.length; i = i + 1) {\n            if (Math.abs(this['_' + propertyNames[i]] - otherColor['_' + propertyNames[i]]) > epsilon) {\n                return false;\n            }\n        }\n\n        return true;\n    };\n\n    prototype.toJSON = new Function(\n        \"return ['\" + colorSpaceName + \"', \" +\n            propertyNames.map(function (propertyName) {\n                return \"this._\" + propertyName;\n            }, this).join(\", \") +\n        \"];\"\n    );\n\n    for (var propertyName in config) {\n        if (config.hasOwnProperty(propertyName)) {\n            var matchFromColorSpace = propertyName.match(/^from(.*)$/);\n            if (matchFromColorSpace) {\n                ONECOLOR[matchFromColorSpace[1].toUpperCase()].prototype[colorSpaceName.toLowerCase()] = config[propertyName];\n            } else {\n                prototype[propertyName] = config[propertyName];\n            }\n        }\n    }\n\n    // It is pretty easy to implement the conversion to the same color space:\n    prototype[colorSpaceName.toLowerCase()] = function () {\n        return this;\n    };\n    prototype.toString = new Function(\"return \\\"[one.color.\" + colorSpaceName + \":\\\"+\" + propertyNames.map(function (propertyName, i) {\n        return \"\\\" \" + propertyNames[i] + \"=\\\"+this._\" + propertyName;\n    }).join(\"+\") + \"+\\\"]\\\";\");\n\n    // Generate getters and setters\n    propertyNames.forEach(function (propertyName, i) {\n        prototype[propertyName] = prototype[propertyName === 'black' ? 'k' : propertyName[0]] = new Function(\"value\", \"isDelta\",\n            // Simple getter mode: color.red()\n            \"if (typeof value === 'undefined') {\" +\n                \"return this._\" + propertyName + \";\" +\n            \"}\" +\n            // Adjuster: color.red(+.2, true)\n            \"if (isDelta) {\" +\n                \"return new this.constructor(\" + propertyNames.map(function (otherPropertyName, i) {\n                    return \"this._\" + otherPropertyName + (propertyName === otherPropertyName ? \"+value\" : \"\");\n                }).join(\", \") + \");\" +\n            \"}\" +\n            // Setter: color.red(.2);\n            \"return new this.constructor(\" + propertyNames.map(function (otherPropertyName, i) {\n                return propertyName === otherPropertyName ? \"value\" : \"this._\" + otherPropertyName;\n            }).join(\", \") + \");\");\n    });\n\n    function installForeignMethods(targetColorSpaceName, sourceColorSpaceName) {\n        var obj = {};\n        obj[sourceColorSpaceName.toLowerCase()] = new Function(\"return this.rgb().\" + sourceColorSpaceName.toLowerCase() + \"();\"); // Fallback\n        ONECOLOR[sourceColorSpaceName].propertyNames.forEach(function (propertyName, i) {\n            obj[propertyName] = obj[propertyName === 'black' ? 'k' : propertyName[0]] = new Function(\"value\", \"isDelta\", \"return this.\" + sourceColorSpaceName.toLowerCase() + \"().\" + propertyName + \"(value, isDelta);\");\n        });\n        for (var prop in obj) {\n            if (obj.hasOwnProperty(prop) && ONECOLOR[targetColorSpaceName].prototype[prop] === undefined) {\n                ONECOLOR[targetColorSpaceName].prototype[prop] = obj[prop];\n            }\n        }\n    }\n\n    installedColorSpaces.forEach(function (otherColorSpaceName) {\n        installForeignMethods(colorSpaceName, otherColorSpaceName);\n        installForeignMethods(otherColorSpaceName, colorSpaceName);\n    });\n\n    installedColorSpaces.push(colorSpaceName);\n}\n\nONECOLOR.installMethod = function (name, fn) {\n    installedColorSpaces.forEach(function (colorSpace) {\n        ONECOLOR[colorSpace].prototype[name] = fn;\n    });\n};\n\ninstallColorSpace('RGB', ['red', 'green', 'blue', 'alpha'], {\n    hex: function () {\n        var hexString = (Math.round(255 * this._red) * 0x10000 + Math.round(255 * this._green) * 0x100 + Math.round(255 * this._blue)).toString(16);\n        return '#' + ('00000'.substr(0, 6 - hexString.length)) + hexString;\n    },\n\n    css: function () {\n        return \"rgb(\" + Math.round(255 * this._red) + \",\" + Math.round(255 * this._green) + \",\" + Math.round(255 * this._blue) + \")\";\n    },\n\n    cssa: function () {\n        return \"rgba(\" + Math.round(255 * this._red) + \",\" + Math.round(255 * this._green) + \",\" + Math.round(255 * this._blue) + \",\" + this._alpha + \")\";\n    }\n});\n\nif (typeof module !== 'undefined') {\n    // Node module export\n    module.exports = ONECOLOR;\n} else if (typeof define === 'function' && !undef(define.amd)) {\n    define([], function () {\n        return ONECOLOR;\n    });\n} else if (typeof jQuery !== 'undefined' && undef(jQuery.color)) {\n    jQuery.color = ONECOLOR;\n} else {\n    one = window.one || {};\n    one.color = ONECOLOR;\n}\n\n/*global namedColors*/\nnamedColors = {\n    aliceblue: 'f0f8ff',\n    antiquewhite: 'faebd7',\n    aqua: '0ff',\n    aquamarine: '7fffd4',\n    azure: 'f0ffff',\n    beige: 'f5f5dc',\n    bisque: 'ffe4c4',\n    black: '000',\n    blanchedalmond: 'ffebcd',\n    blue: '00f',\n    blueviolet: '8a2be2',\n    brown: 'a52a2a',\n    burlywood: 'deb887',\n    cadetblue: '5f9ea0',\n    chartreuse: '7fff00',\n    chocolate: 'd2691e',\n    coral: 'ff7f50',\n    cornflowerblue: '6495ed',\n    cornsilk: 'fff8dc',\n    crimson: 'dc143c',\n    cyan: '0ff',\n    darkblue: '00008b',\n    darkcyan: '008b8b',\n    darkgoldenrod: 'b8860b',\n    darkgray: 'a9a9a9',\n    darkgrey: 'a9a9a9',\n    darkgreen: '006400',\n    darkkhaki: 'bdb76b',\n    darkmagenta: '8b008b',\n    darkolivegreen: '556b2f',\n    darkorange: 'ff8c00',\n    darkorchid: '9932cc',\n    darkred: '8b0000',\n    darksalmon: 'e9967a',\n    darkseagreen: '8fbc8f',\n    darkslateblue: '483d8b',\n    darkslategray: '2f4f4f',\n    darkslategrey: '2f4f4f',\n    darkturquoise: '00ced1',\n    darkviolet: '9400d3',\n    deeppink: 'ff1493',\n    deepskyblue: '00bfff',\n    dimgray: '696969',\n    dimgrey: '696969',\n    dodgerblue: '1e90ff',\n    firebrick: 'b22222',\n    floralwhite: 'fffaf0',\n    forestgreen: '228b22',\n    fuchsia: 'f0f',\n    gainsboro: 'dcdcdc',\n    ghostwhite: 'f8f8ff',\n    gold: 'ffd700',\n    goldenrod: 'daa520',\n    gray: '808080',\n    grey: '808080',\n    green: '008000',\n    greenyellow: 'adff2f',\n    honeydew: 'f0fff0',\n    hotpink: 'ff69b4',\n    indianred: 'cd5c5c',\n    indigo: '4b0082',\n    ivory: 'fffff0',\n    khaki: 'f0e68c',\n    lavender: 'e6e6fa',\n    lavenderblush: 'fff0f5',\n    lawngreen: '7cfc00',\n    lemonchiffon: 'fffacd',\n    lightblue: 'add8e6',\n    lightcoral: 'f08080',\n    lightcyan: 'e0ffff',\n    lightgoldenrodyellow: 'fafad2',\n    lightgray: 'd3d3d3',\n    lightgrey: 'd3d3d3',\n    lightgreen: '90ee90',\n    lightpink: 'ffb6c1',\n    lightsalmon: 'ffa07a',\n    lightseagreen: '20b2aa',\n    lightskyblue: '87cefa',\n    lightslategray: '789',\n    lightslategrey: '789',\n    lightsteelblue: 'b0c4de',\n    lightyellow: 'ffffe0',\n    lime: '0f0',\n    limegreen: '32cd32',\n    linen: 'faf0e6',\n    magenta: 'f0f',\n    maroon: '800000',\n    mediumaquamarine: '66cdaa',\n    mediumblue: '0000cd',\n    mediumorchid: 'ba55d3',\n    mediumpurple: '9370d8',\n    mediumseagreen: '3cb371',\n    mediumslateblue: '7b68ee',\n    mediumspringgreen: '00fa9a',\n    mediumturquoise: '48d1cc',\n    mediumvioletred: 'c71585',\n    midnightblue: '191970',\n    mintcream: 'f5fffa',\n    mistyrose: 'ffe4e1',\n    moccasin: 'ffe4b5',\n    navajowhite: 'ffdead',\n    navy: '000080',\n    oldlace: 'fdf5e6',\n    olive: '808000',\n    olivedrab: '6b8e23',\n    orange: 'ffa500',\n    orangered: 'ff4500',\n    orchid: 'da70d6',\n    palegoldenrod: 'eee8aa',\n    palegreen: '98fb98',\n    paleturquoise: 'afeeee',\n    palevioletred: 'd87093',\n    papayawhip: 'ffefd5',\n    peachpuff: 'ffdab9',\n    peru: 'cd853f',\n    pink: 'ffc0cb',\n    plum: 'dda0dd',\n    powderblue: 'b0e0e6',\n    purple: '800080',\n    red: 'f00',\n    rosybrown: 'bc8f8f',\n    royalblue: '4169e1',\n    saddlebrown: '8b4513',\n    salmon: 'fa8072',\n    sandybrown: 'f4a460',\n    seagreen: '2e8b57',\n    seashell: 'fff5ee',\n    sienna: 'a0522d',\n    silver: 'c0c0c0',\n    skyblue: '87ceeb',\n    slateblue: '6a5acd',\n    slategray: '708090',\n    slategrey: '708090',\n    snow: 'fffafa',\n    springgreen: '00ff7f',\n    steelblue: '4682b4',\n    tan: 'd2b48c',\n    teal: '008080',\n    thistle: 'd8bfd8',\n    tomato: 'ff6347',\n    turquoise: '40e0d0',\n    violet: 'ee82ee',\n    wheat: 'f5deb3',\n    white: 'fff',\n    whitesmoke: 'f5f5f5',\n    yellow: 'ff0',\n    yellowgreen: '9acd32'\n};\n\n/*global one*/\n\ninstallColorSpace('HSV', ['hue', 'saturation', 'value', 'alpha'], {\n    rgb: function () {\n        var hue = this._hue,\n            saturation = this._saturation,\n            value = this._value,\n            i = Math.min(5, Math.floor(hue * 6)),\n            f = hue * 6 - i,\n            p = value * (1 - saturation),\n            q = value * (1 - f * saturation),\n            t = value * (1 - (1 - f) * saturation),\n            red,\n            green,\n            blue;\n        switch (i) {\n        case 0:\n            red = value;\n            green = t;\n            blue = p;\n            break;\n        case 1:\n            red = q;\n            green = value;\n            blue = p;\n            break;\n        case 2:\n            red = p;\n            green = value;\n            blue = t;\n            break;\n        case 3:\n            red = p;\n            green = q;\n            blue = value;\n            break;\n        case 4:\n            red = t;\n            green = p;\n            blue = value;\n            break;\n        case 5:\n            red = value;\n            green = p;\n            blue = q;\n            break;\n        }\n        return new ONECOLOR.RGB(red, green, blue, this._alpha);\n    },\n\n    hsl: function () {\n        var l = (2 - this._saturation) * this._value,\n            sv = this._saturation * this._value,\n            svDivisor = l <= 1 ? l : (2 - l),\n            saturation;\n\n        // Avoid division by zero when lightness approaches zero:\n        if (svDivisor < 1e-9) {\n            saturation = 0;\n        } else {\n            saturation = sv / svDivisor;\n        }\n        return new ONECOLOR.HSL(this._hue, saturation, l / 2, this._alpha);\n    },\n\n    fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n        var red = this._red,\n            green = this._green,\n            blue = this._blue,\n            max = Math.max(red, green, blue),\n            min = Math.min(red, green, blue),\n            delta = max - min,\n            hue,\n            saturation = (max === 0) ? 0 : (delta / max),\n            value = max;\n        if (delta === 0) {\n            hue = 0;\n        } else {\n            switch (max) {\n            case red:\n                hue = (green - blue) / delta / 6 + (green < blue ? 1 : 0);\n                break;\n            case green:\n                hue = (blue - red) / delta / 6 + 1 / 3;\n                break;\n            case blue:\n                hue = (red - green) / delta / 6 + 2 / 3;\n                break;\n            }\n        }\n        return new ONECOLOR.HSV(hue, saturation, value, this._alpha);\n    }\n});\n\n/*global one*/\n\n\ninstallColorSpace('HSL', ['hue', 'saturation', 'lightness', 'alpha'], {\n    hsv: function () {\n        // Algorithm adapted from http://wiki.secondlife.com/wiki/Color_conversion_scripts\n        var l = this._lightness * 2,\n            s = this._saturation * ((l <= 1) ? l : 2 - l),\n            saturation;\n\n        // Avoid division by zero when l + s is very small (approaching black):\n        if (l + s < 1e-9) {\n            saturation = 0;\n        } else {\n            saturation = (2 * s) / (l + s);\n        }\n\n        return new ONECOLOR.HSV(this._hue, saturation, (l + s) / 2, this._alpha);\n    },\n\n    rgb: function () {\n        return this.hsv().rgb();\n    },\n\n    fromRgb: function () { // Becomes one.color.RGB.prototype.hsv\n        return this.hsv().hsl();\n    }\n});\n\n/*global one*/\n\ninstallColorSpace('CMYK', ['cyan', 'magenta', 'yellow', 'black', 'alpha'], {\n    rgb: function () {\n        return new ONECOLOR.RGB((1 - this._cyan * (1 - this._black) - this._black),\n                                 (1 - this._magenta * (1 - this._black) - this._black),\n                                 (1 - this._yellow * (1 - this._black) - this._black),\n                                 this._alpha);\n    },\n\n    fromRgb: function () { // Becomes one.color.RGB.prototype.cmyk\n        // Adapted from http://www.javascripter.net/faq/rgb2cmyk.htm\n        var red = this._red,\n            green = this._green,\n            blue = this._blue,\n            cyan = 1 - red,\n            magenta = 1 - green,\n            yellow = 1 - blue,\n            black = 1;\n        if (red || green || blue) {\n            black = Math.min(cyan, Math.min(magenta, yellow));\n            cyan = (cyan - black) / (1 - black);\n            magenta = (magenta - black) / (1 - black);\n            yellow = (yellow - black) / (1 - black);\n        } else {\n            black = 1;\n        }\n        return new ONECOLOR.CMYK(cyan, magenta, yellow, black, this._alpha);\n    }\n});\n\nONECOLOR.installMethod('clearer', function (amount) {\n    return this.alpha(isNaN(amount) ? -0.1 : -amount, true);\n});\n\n\nONECOLOR.installMethod('darken', function (amount) {\n    return this.lightness(isNaN(amount) ? -0.1 : -amount, true);\n});\n\n\nONECOLOR.installMethod('desaturate', function (amount) {\n    return this.saturation(isNaN(amount) ? -0.1 : -amount, true);\n});\n\nfunction gs () {\n    var rgb = this.rgb(),\n        val = rgb._red * 0.3 + rgb._green * 0.59 + rgb._blue * 0.11;\n\n    return new ONECOLOR.RGB(val, val, val, this._alpha);\n};\n\nONECOLOR.installMethod('greyscale', gs);\nONECOLOR.installMethod('grayscale', gs);\n\n\nONECOLOR.installMethod('lighten', function (amount) {\n    return this.lightness(isNaN(amount) ? 0.1 : amount, true);\n});\n\nONECOLOR.installMethod('mix', function (otherColor, weight) {\n    otherColor = ONECOLOR(otherColor).rgb();\n    weight = 1 - (isNaN(weight) ? 0.5 : weight);\n\n    var w = weight * 2 - 1,\n        a = this._alpha - otherColor._alpha,\n        weight1 = (((w * a === -1) ? w : (w + a) / (1 + w * a)) + 1) / 2,\n        weight2 = 1 - weight1,\n        rgb = this.rgb();\n\n    return new ONECOLOR.RGB(\n        rgb._red * weight1 + otherColor._red * weight2,\n        rgb._green * weight1 + otherColor._green * weight2,\n        rgb._blue * weight1 + otherColor._blue * weight2,\n        rgb._alpha * weight + otherColor._alpha * (1 - weight)\n    );\n});\n\nONECOLOR.installMethod('negate', function () {\n    var rgb = this.rgb();\n    return new ONECOLOR.RGB(1 - rgb._red, 1 - rgb._green, 1 - rgb._blue, this._alpha);\n});\n\nONECOLOR.installMethod('opaquer', function (amount) {\n    return this.alpha(isNaN(amount) ? 0.1 : amount, true);\n});\n\nONECOLOR.installMethod('rotate', function (degrees) {\n    return this.hue((degrees || 0) / 360, true);\n});\n\n\nONECOLOR.installMethod('saturate', function (amount) {\n    return this.saturation(isNaN(amount) ? 0.1 : amount, true);\n});\n\n// Adapted from http://gimp.sourcearchive.com/documentation/2.6.6-1ubuntu1/color-to-alpha_8c-source.html\n/*\n    toAlpha returns a color where the values of the argument have been converted to alpha\n*/\nONECOLOR.installMethod('toAlpha', function (color) {\n    var me = this.rgb(),\n        other = ONECOLOR(color).rgb(),\n        epsilon = 1e-10,\n        a = new ONECOLOR.RGB(0, 0, 0, me._alpha),\n        channels = ['_red', '_green', '_blue'];\n\n    channels.forEach(function (channel) {\n        if (me[channel] < epsilon) {\n            a[channel] = me[channel];\n        } else if (me[channel] > other[channel]) {\n            a[channel] = (me[channel] - other[channel]) / (1 - other[channel]);\n        } else if (me[channel] > other[channel]) {\n            a[channel] = (other[channel] - me[channel]) / other[channel];\n        } else {\n            a[channel] = 0;\n        }\n    });\n\n    if (a._red > a._green) {\n        if (a._red > a._blue) {\n            me._alpha = a._red;\n        } else {\n            me._alpha = a._blue;\n        }\n    } else if (a._green > a._blue) {\n        me._alpha = a._green;\n    } else {\n        me._alpha = a._blue;\n    }\n\n    if (me._alpha < epsilon) {\n        return me;\n    }\n\n    channels.forEach(function (channel) {\n        me[channel] = (me[channel] - other[channel]) / me._alpha + other[channel];\n    });\n    me._alpha *= a._alpha;\n\n    return me;\n});\n\n/*global one*/\n\n// This file is purely for the build system\n\n// Convenience functions\n\n\n//@ sourceURL=/node_modules/onecolor/one-color-all-debug.js"));

require.define("/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/package.json"));

require.define("/index.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = Picker\n\nvar Stream = require('stream')\n\nvar Field = require('fffield')\n\nfunction Picker(el, color, mode) {\n  if(this.constructor !== Picker)\n    return new Picker(el, color, mode)\n\n  this.color = color\n  this.el = el\n  this.mode = mode\n\n  this.field_primary = this.field_class(\n      this.el.querySelector('[name=primary]') \n    , this.primary_coords().x\n    , this.primary_coords().y\n  )\n\n  this.field_secondary = this.field_class(\n      this.el.querySelector('[name=secondary]')\n    , 0\n    , this.secondary_coords().y\n  )\n\n  this.writable =\n  this.readable = true\n\n  this.field_secondary.cursor.x_free = 0\n\n  this.field_primary.on('data', this.change_primary.bind(this))\n  this.field_secondary.on('data', this.change_secondary.bind(this))\n\n  this['modify_'+this.mode]()\n  Stream.call(this)\n}\n\nvar cons = Picker\n  , proto = cons.prototype = new Stream\n\nproto.constructor = cons\n\nproto.field_class = Field\n\nproto.mode_to_coords = {\n  hsl: ['hue', 'saturation', 'lightness']\n, slh: ['saturation', 'lightness', 'hue']\n}\n\nproto.primary_coords = function() {\n  return {\n      x: this.color[this.mode_to_coords[this.mode][0]]()\n    , y: this.color[this.mode_to_coords[this.mode][1]]()\n  }\n}\n\nproto.secondary_coords = function() {\n  return {\n      x: 0\n    , y: this.color[this.mode_to_coords[this.mode][2]]()\n  }\n}\n\nproto.change_primary = function(data) {\n  this['set_primary_'+this.mode](data)\n  this['modify_'+this.mode]()\n\n  this.emit('data', this.color)\n}\n\nproto.change_secondary = function(data) {\n  this['set_secondary_'+this.mode](data)\n  this['modify_'+this.mode]()\n\n  this.emit('data', this.color)\n}\n\nproto.set_mode = function(mode) {\n  this.mode = mode\n\n  var primary = this.primary_coords()\n    , secondary = this.secondary_coords()\n\n  this.field_primary.set(primary.x, primary.y)\n  this.field_secondary.set(0, primary.y)\n  this['modify_'+this.mode]()\n}\n\nproto.set_primary_hsl = function(data) {\n  this.color = this.color.hue(data.x).saturation(data.y)\n}\n\nproto.set_primary_slh = function(data) {\n  var dark = data.y\n    , light = 1.0 - data.x\n    , color\n    , hue\n\n  this.color = this.color.lightness(0.5).saturation(1.0)\n  hue = this.color.hue()\n\n  color = [\n      (this.color.red() * data.y + light)\n    , (this.color.green() * data.y + light)\n    , (this.color.blue() * data.y + light)\n  ]\n\n  this.color = this.color.red(color[0]).green(color[1]).blue(color[2]).hue(hue)\n}\n\nproto.set_secondary_hsl = function(data) {\n  this.color = this.color.lightness(data.y)\n}\n\nproto.set_secondary_slh = function(data) {\n  this.color = this.color.hue(data.y)\n}\n\nproto.write = function(color) {\n  this.color = color\n\n  var primary = this.primary_coords()\n    , secondary = this.secondary_coords()\n\n  this.field_primary.set(primary.x, primary.y)\n  this.field_secondary.set(0, primary.y)\n}\n\nproto.modify_hsl = function() {\n  var black = -2 * this.color.lightness() + 1\n    , white = 2 * this.color.lightness() - 1\n\n  this.field_primary.el.style.background =\n      '-webkit-linear-gradient(top, rgba(255, 255, 255, '+white+'), '\n    + 'rgba(255, 255, 255, '+white+')), '\n    + '-webkit-linear-gradient(top, rgba(0, 0, 0, '+black+'), '\n    + 'rgba(0, 0, 0, '+black+')), '\n    + '-webkit-linear-gradient(top, '\n    + 'rgba(255, 255, 255, 0.0), '\n    + 'rgba(255, 255, 255, 1.0)), '\n    + '-webkit-linear-gradient(left, '\n    + '#FF0000 0%, '\n    + '#FFFF00 16.666666666666664%, '\n    + '#00FF00 33.33333333333333%, '\n    + '#00FFFF 49.99999999999999%, '\n    + '#0000FF 66.66666666666666%, '\n    + '#FF00FF 83.33333333333331%, '\n    + '#FF0000 100%)'\n\n  this.field_secondary.el.style.background =\n   '-webkit-linear-gradient(top, #FFF, #000)'\n\n}\n\nproto.modify_slh = function() {\n  this.field_primary.el.style.background =\n    '-webkit-linear-gradient(top, '\n  + '  rgba(0, 0, 0, 0.0), '\n  + '  rgba(0, 0, 0, 1.0)), '\n  + '-webkit-linear-gradient(left, '\n  + '  rgba(255, 255, 255, 1.0), '\n  + '  rgba(255, 255, 255, 0.0)) '\n\n  this.field_primary.el.style.backgroundColor = this.color.lightness(0.5).saturation(1.0).hex()\n\n  this.field_secondary.el.style.background =\n      '-webkit-linear-gradient(bottom, '\n    + '#FF0000 0%, '\n    + '#FFFF00 16.666666666666664%, '\n    + '#00FF00 33.33333333333333%, '\n    + '#00FFFF 49.99999999999999%, '\n    + '#0000FF 66.66666666666666%, '\n    + '#FF00FF 83.33333333333331%, '\n    + '#FF0000 100%)'\n}\n\n//@ sourceURL=/index.js"));

require.define("stream",Function(['require','module','exports','__dirname','__filename','process'],"var events = require('events');\nvar util = require('util');\n\nfunction Stream() {\n  events.EventEmitter.call(this);\n}\nutil.inherits(Stream, events.EventEmitter);\nmodule.exports = Stream;\n// Backwards-compat with node 0.4.x\nStream.Stream = Stream;\n\nStream.prototype.pipe = function(dest, options) {\n  var source = this;\n\n  function ondata(chunk) {\n    if (dest.writable) {\n      if (false === dest.write(chunk) && source.pause) {\n        source.pause();\n      }\n    }\n  }\n\n  source.on('data', ondata);\n\n  function ondrain() {\n    if (source.readable && source.resume) {\n      source.resume();\n    }\n  }\n\n  dest.on('drain', ondrain);\n\n  // If the 'end' option is not supplied, dest.end() will be called when\n  // source gets the 'end' or 'close' events.  Only dest.end() once, and\n  // only when all sources have ended.\n  if (!dest._isStdio && (!options || options.end !== false)) {\n    dest._pipeCount = dest._pipeCount || 0;\n    dest._pipeCount++;\n\n    source.on('end', onend);\n    source.on('close', onclose);\n  }\n\n  var didOnEnd = false;\n  function onend() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest._pipeCount--;\n\n    // remove the listeners\n    cleanup();\n\n    if (dest._pipeCount > 0) {\n      // waiting for other incoming streams to end.\n      return;\n    }\n\n    dest.end();\n  }\n\n\n  function onclose() {\n    if (didOnEnd) return;\n    didOnEnd = true;\n\n    dest._pipeCount--;\n\n    // remove the listeners\n    cleanup();\n\n    if (dest._pipeCount > 0) {\n      // waiting for other incoming streams to end.\n      return;\n    }\n\n    dest.destroy();\n  }\n\n  // don't leave dangling pipes when there are errors.\n  function onerror(er) {\n    cleanup();\n    if (this.listeners('error').length === 0) {\n      throw er; // Unhandled stream error in pipe.\n    }\n  }\n\n  source.on('error', onerror);\n  dest.on('error', onerror);\n\n  // remove all the event listeners that were added.\n  function cleanup() {\n    source.removeListener('data', ondata);\n    dest.removeListener('drain', ondrain);\n\n    source.removeListener('end', onend);\n    source.removeListener('close', onclose);\n\n    source.removeListener('error', onerror);\n    dest.removeListener('error', onerror);\n\n    source.removeListener('end', cleanup);\n    source.removeListener('close', cleanup);\n\n    dest.removeListener('end', cleanup);\n    dest.removeListener('close', cleanup);\n  }\n\n  source.on('end', cleanup);\n  source.on('close', cleanup);\n\n  dest.on('end', cleanup);\n  dest.on('close', cleanup);\n\n  dest.emit('pipe', source);\n\n  // Allow for unix-like usage: A.pipe(B).pipe(C)\n  return dest;\n};\n\n//@ sourceURL=stream"));

require.define("events",Function(['require','module','exports','__dirname','__filename','process'],"if (!process.EventEmitter) process.EventEmitter = function () {};\n\nvar EventEmitter = exports.EventEmitter = process.EventEmitter;\nvar isArray = typeof Array.isArray === 'function'\n    ? Array.isArray\n    : function (xs) {\n        return Object.prototype.toString.call(xs) === '[object Array]'\n    }\n;\n\n// By default EventEmitters will print a warning if more than\n// 10 listeners are added to it. This is a useful default which\n// helps finding memory leaks.\n//\n// Obviously not all Emitters should be limited to 10. This function allows\n// that to be increased. Set to zero for unlimited.\nvar defaultMaxListeners = 10;\nEventEmitter.prototype.setMaxListeners = function(n) {\n  if (!this._events) this._events = {};\n  this._events.maxListeners = n;\n};\n\n\nEventEmitter.prototype.emit = function(type) {\n  // If there is no 'error' event listener then throw.\n  if (type === 'error') {\n    if (!this._events || !this._events.error ||\n        (isArray(this._events.error) && !this._events.error.length))\n    {\n      if (arguments[1] instanceof Error) {\n        throw arguments[1]; // Unhandled 'error' event\n      } else {\n        throw new Error(\"Uncaught, unspecified 'error' event.\");\n      }\n      return false;\n    }\n  }\n\n  if (!this._events) return false;\n  var handler = this._events[type];\n  if (!handler) return false;\n\n  if (typeof handler == 'function') {\n    switch (arguments.length) {\n      // fast cases\n      case 1:\n        handler.call(this);\n        break;\n      case 2:\n        handler.call(this, arguments[1]);\n        break;\n      case 3:\n        handler.call(this, arguments[1], arguments[2]);\n        break;\n      // slower\n      default:\n        var args = Array.prototype.slice.call(arguments, 1);\n        handler.apply(this, args);\n    }\n    return true;\n\n  } else if (isArray(handler)) {\n    var args = Array.prototype.slice.call(arguments, 1);\n\n    var listeners = handler.slice();\n    for (var i = 0, l = listeners.length; i < l; i++) {\n      listeners[i].apply(this, args);\n    }\n    return true;\n\n  } else {\n    return false;\n  }\n};\n\n// EventEmitter is defined in src/node_events.cc\n// EventEmitter.prototype.emit() is also defined there.\nEventEmitter.prototype.addListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('addListener only takes instances of Function');\n  }\n\n  if (!this._events) this._events = {};\n\n  // To avoid recursion in the case that type == \"newListeners\"! Before\n  // adding it to the listeners, first emit \"newListeners\".\n  this.emit('newListener', type, listener);\n\n  if (!this._events[type]) {\n    // Optimize the case of one listener. Don't need the extra array object.\n    this._events[type] = listener;\n  } else if (isArray(this._events[type])) {\n\n    // Check for listener leak\n    if (!this._events[type].warned) {\n      var m;\n      if (this._events.maxListeners !== undefined) {\n        m = this._events.maxListeners;\n      } else {\n        m = defaultMaxListeners;\n      }\n\n      if (m && m > 0 && this._events[type].length > m) {\n        this._events[type].warned = true;\n        console.error('(node) warning: possible EventEmitter memory ' +\n                      'leak detected. %d listeners added. ' +\n                      'Use emitter.setMaxListeners() to increase limit.',\n                      this._events[type].length);\n        console.trace();\n      }\n    }\n\n    // If we've already got an array, just append.\n    this._events[type].push(listener);\n  } else {\n    // Adding the second element, need to change to array.\n    this._events[type] = [this._events[type], listener];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.on = EventEmitter.prototype.addListener;\n\nEventEmitter.prototype.once = function(type, listener) {\n  var self = this;\n  self.on(type, function g() {\n    self.removeListener(type, g);\n    listener.apply(this, arguments);\n  });\n\n  return this;\n};\n\nEventEmitter.prototype.removeListener = function(type, listener) {\n  if ('function' !== typeof listener) {\n    throw new Error('removeListener only takes instances of Function');\n  }\n\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (!this._events || !this._events[type]) return this;\n\n  var list = this._events[type];\n\n  if (isArray(list)) {\n    var i = list.indexOf(listener);\n    if (i < 0) return this;\n    list.splice(i, 1);\n    if (list.length == 0)\n      delete this._events[type];\n  } else if (this._events[type] === listener) {\n    delete this._events[type];\n  }\n\n  return this;\n};\n\nEventEmitter.prototype.removeAllListeners = function(type) {\n  // does not use listeners(), so no side effect of creating _events[type]\n  if (type && this._events && this._events[type]) this._events[type] = null;\n  return this;\n};\n\nEventEmitter.prototype.listeners = function(type) {\n  if (!this._events) this._events = {};\n  if (!this._events[type]) this._events[type] = [];\n  if (!isArray(this._events[type])) {\n    this._events[type] = [this._events[type]];\n  }\n  return this._events[type];\n};\n\n//@ sourceURL=events"));

require.define("util",Function(['require','module','exports','__dirname','__filename','process'],"var events = require('events');\n\nexports.print = function () {};\nexports.puts = function () {};\nexports.debug = function() {};\n\nexports.inspect = function(obj, showHidden, depth, colors) {\n  var seen = [];\n\n  var stylize = function(str, styleType) {\n    // http://en.wikipedia.org/wiki/ANSI_escape_code#graphics\n    var styles =\n        { 'bold' : [1, 22],\n          'italic' : [3, 23],\n          'underline' : [4, 24],\n          'inverse' : [7, 27],\n          'white' : [37, 39],\n          'grey' : [90, 39],\n          'black' : [30, 39],\n          'blue' : [34, 39],\n          'cyan' : [36, 39],\n          'green' : [32, 39],\n          'magenta' : [35, 39],\n          'red' : [31, 39],\n          'yellow' : [33, 39] };\n\n    var style =\n        { 'special': 'cyan',\n          'number': 'blue',\n          'boolean': 'yellow',\n          'undefined': 'grey',\n          'null': 'bold',\n          'string': 'green',\n          'date': 'magenta',\n          // \"name\": intentionally not styling\n          'regexp': 'red' }[styleType];\n\n    if (style) {\n      return '\\033[' + styles[style][0] + 'm' + str +\n             '\\033[' + styles[style][1] + 'm';\n    } else {\n      return str;\n    }\n  };\n  if (! colors) {\n    stylize = function(str, styleType) { return str; };\n  }\n\n  function format(value, recurseTimes) {\n    // Provide a hook for user-specified inspect functions.\n    // Check that value is an object with an inspect function on it\n    if (value && typeof value.inspect === 'function' &&\n        // Filter out the util module, it's inspect function is special\n        value !== exports &&\n        // Also filter out any prototype objects using the circular check.\n        !(value.constructor && value.constructor.prototype === value)) {\n      return value.inspect(recurseTimes);\n    }\n\n    // Primitive types cannot have properties\n    switch (typeof value) {\n      case 'undefined':\n        return stylize('undefined', 'undefined');\n\n      case 'string':\n        var simple = '\\'' + JSON.stringify(value).replace(/^\"|\"$/g, '')\n                                                 .replace(/'/g, \"\\\\'\")\n                                                 .replace(/\\\\\"/g, '\"') + '\\'';\n        return stylize(simple, 'string');\n\n      case 'number':\n        return stylize('' + value, 'number');\n\n      case 'boolean':\n        return stylize('' + value, 'boolean');\n    }\n    // For some reason typeof null is \"object\", so special case here.\n    if (value === null) {\n      return stylize('null', 'null');\n    }\n\n    // Look up the keys of the object.\n    var visible_keys = Object_keys(value);\n    var keys = showHidden ? Object_getOwnPropertyNames(value) : visible_keys;\n\n    // Functions without properties can be shortcutted.\n    if (typeof value === 'function' && keys.length === 0) {\n      if (isRegExp(value)) {\n        return stylize('' + value, 'regexp');\n      } else {\n        var name = value.name ? ': ' + value.name : '';\n        return stylize('[Function' + name + ']', 'special');\n      }\n    }\n\n    // Dates without properties can be shortcutted\n    if (isDate(value) && keys.length === 0) {\n      return stylize(value.toUTCString(), 'date');\n    }\n\n    var base, type, braces;\n    // Determine the object type\n    if (isArray(value)) {\n      type = 'Array';\n      braces = ['[', ']'];\n    } else {\n      type = 'Object';\n      braces = ['{', '}'];\n    }\n\n    // Make functions say that they are functions\n    if (typeof value === 'function') {\n      var n = value.name ? ': ' + value.name : '';\n      base = (isRegExp(value)) ? ' ' + value : ' [Function' + n + ']';\n    } else {\n      base = '';\n    }\n\n    // Make dates with properties first say the date\n    if (isDate(value)) {\n      base = ' ' + value.toUTCString();\n    }\n\n    if (keys.length === 0) {\n      return braces[0] + base + braces[1];\n    }\n\n    if (recurseTimes < 0) {\n      if (isRegExp(value)) {\n        return stylize('' + value, 'regexp');\n      } else {\n        return stylize('[Object]', 'special');\n      }\n    }\n\n    seen.push(value);\n\n    var output = keys.map(function(key) {\n      var name, str;\n      if (value.__lookupGetter__) {\n        if (value.__lookupGetter__(key)) {\n          if (value.__lookupSetter__(key)) {\n            str = stylize('[Getter/Setter]', 'special');\n          } else {\n            str = stylize('[Getter]', 'special');\n          }\n        } else {\n          if (value.__lookupSetter__(key)) {\n            str = stylize('[Setter]', 'special');\n          }\n        }\n      }\n      if (visible_keys.indexOf(key) < 0) {\n        name = '[' + key + ']';\n      }\n      if (!str) {\n        if (seen.indexOf(value[key]) < 0) {\n          if (recurseTimes === null) {\n            str = format(value[key]);\n          } else {\n            str = format(value[key], recurseTimes - 1);\n          }\n          if (str.indexOf('\\n') > -1) {\n            if (isArray(value)) {\n              str = str.split('\\n').map(function(line) {\n                return '  ' + line;\n              }).join('\\n').substr(2);\n            } else {\n              str = '\\n' + str.split('\\n').map(function(line) {\n                return '   ' + line;\n              }).join('\\n');\n            }\n          }\n        } else {\n          str = stylize('[Circular]', 'special');\n        }\n      }\n      if (typeof name === 'undefined') {\n        if (type === 'Array' && key.match(/^\\d+$/)) {\n          return str;\n        }\n        name = JSON.stringify('' + key);\n        if (name.match(/^\"([a-zA-Z_][a-zA-Z_0-9]*)\"$/)) {\n          name = name.substr(1, name.length - 2);\n          name = stylize(name, 'name');\n        } else {\n          name = name.replace(/'/g, \"\\\\'\")\n                     .replace(/\\\\\"/g, '\"')\n                     .replace(/(^\"|\"$)/g, \"'\");\n          name = stylize(name, 'string');\n        }\n      }\n\n      return name + ': ' + str;\n    });\n\n    seen.pop();\n\n    var numLinesEst = 0;\n    var length = output.reduce(function(prev, cur) {\n      numLinesEst++;\n      if (cur.indexOf('\\n') >= 0) numLinesEst++;\n      return prev + cur.length + 1;\n    }, 0);\n\n    if (length > 50) {\n      output = braces[0] +\n               (base === '' ? '' : base + '\\n ') +\n               ' ' +\n               output.join(',\\n  ') +\n               ' ' +\n               braces[1];\n\n    } else {\n      output = braces[0] + base + ' ' + output.join(', ') + ' ' + braces[1];\n    }\n\n    return output;\n  }\n  return format(obj, (typeof depth === 'undefined' ? 2 : depth));\n};\n\n\nfunction isArray(ar) {\n  return ar instanceof Array ||\n         Array.isArray(ar) ||\n         (ar && ar !== Object.prototype && isArray(ar.__proto__));\n}\n\n\nfunction isRegExp(re) {\n  return re instanceof RegExp ||\n    (typeof re === 'object' && Object.prototype.toString.call(re) === '[object RegExp]');\n}\n\n\nfunction isDate(d) {\n  if (d instanceof Date) return true;\n  if (typeof d !== 'object') return false;\n  var properties = Date.prototype && Object_getOwnPropertyNames(Date.prototype);\n  var proto = d.__proto__ && Object_getOwnPropertyNames(d.__proto__);\n  return JSON.stringify(proto) === JSON.stringify(properties);\n}\n\nfunction pad(n) {\n  return n < 10 ? '0' + n.toString(10) : n.toString(10);\n}\n\nvar months = ['Jan', 'Feb', 'Mar', 'Apr', 'May', 'Jun', 'Jul', 'Aug', 'Sep',\n              'Oct', 'Nov', 'Dec'];\n\n// 26 Feb 16:19:34\nfunction timestamp() {\n  var d = new Date();\n  var time = [pad(d.getHours()),\n              pad(d.getMinutes()),\n              pad(d.getSeconds())].join(':');\n  return [d.getDate(), months[d.getMonth()], time].join(' ');\n}\n\nexports.log = function (msg) {};\n\nexports.pump = null;\n\nvar Object_keys = Object.keys || function (obj) {\n    var res = [];\n    for (var key in obj) res.push(key);\n    return res;\n};\n\nvar Object_getOwnPropertyNames = Object.getOwnPropertyNames || function (obj) {\n    var res = [];\n    for (var key in obj) {\n        if (Object.hasOwnProperty.call(obj, key)) res.push(key);\n    }\n    return res;\n};\n\nvar Object_create = Object.create || function (prototype, properties) {\n    // from es5-shim\n    var object;\n    if (prototype === null) {\n        object = { '__proto__' : null };\n    }\n    else {\n        if (typeof prototype !== 'object') {\n            throw new TypeError(\n                'typeof prototype[' + (typeof prototype) + '] != \\'object\\''\n            );\n        }\n        var Type = function () {};\n        Type.prototype = prototype;\n        object = new Type();\n        object.__proto__ = prototype;\n    }\n    if (typeof properties !== 'undefined' && Object.defineProperties) {\n        Object.defineProperties(object, properties);\n    }\n    return object;\n};\n\nexports.inherits = function(ctor, superCtor) {\n  ctor.super_ = superCtor;\n  ctor.prototype = Object_create(superCtor.prototype, {\n    constructor: {\n      value: ctor,\n      enumerable: false,\n      writable: true,\n      configurable: true\n    }\n  });\n};\n\n//@ sourceURL=util"));

require.define("/node_modules/fffield/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/node_modules/fffield/package.json"));

require.define("/node_modules/fffield/index.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = field\n\nvar EE = require('events').EventEmitter\n  , Cursor = require('./cursor')\n\nfield.constructor = Field\nfield.cursor_class = Cursor\n\nfunction field(el, x, y, cursor_class) {\n  var input = new Field(el, x, y)\n  input.cursor_class = cursor_class || field.cursor_class\n\n  input.init()\n  return input \n}\n\nfunction Field(el, x, y) {\n  this.el = el\n  this.cursor = null\n  this.initial_x = x || 0\n  this.initial_y = y || 0\n\n  this.el.style.position = 'relative'\n\n  this.x_extent = \n  this.y_extent = null\n\n  EE.call(this)\n}\n\nvar cons = Field\n  , proto = cons.prototype = new EE\n\nproto.constructor = cons\n\nproto.cursor_class = Cursor\n\nproto.init = function() {\n  var self = this\n    , move_listener \n    , listening = false\n    , padding_x = (~~self.el.style.paddingLeft || 0) + (~~self.el.style.paddingRight || 0)\n    , padding_y = (~~self.el.style.paddingTop || 0) + (~~self.el.style.paddingBottom || 0)\n\n  function px(x) {\n    return x ? +x.slice(0, -2) : x\n  }\n\n  self.x_extent = (self.el.clientWidth || px(self.el.style.width) || 0) + padding_x\n  self.y_extent = (self.el.clientHeight || px(self.el.style.height) || 0) + padding_y\n\n  self.cursor = new self.cursor_class(self.el, 0, 0)\n  self.set(self.initial_x, self.initial_y)\n\n  self.el.addEventListener('mousedown', function(ev) {\n    listening = true \n    ev.preventDefault()\n  }, false)\n\n  self.el.addEventListener('mouseup', function(ev) {\n    self.handle_click(ev)\n  }, false)\n\n  var parent = self.el\n  while(parent && parent.tagName.toUpperCase() !== 'BODY') {\n    parent = parent.parentNode\n  }\n\n  parent.addEventListener('mouseup', function(ev) {\n    listening = false\n  }, false)\n\n  self.el.addEventListener('mousemove', function(ev) {\n    if(listening) {\n      self.handle_click(ev)\n    }\n  }, false)\n}\n\nproto.set = function(x, y) {\n  this.cursor.position(x * this.x_extent, (1.0 - y) * this.y_extent)\n}\n\nproto.handle_click = function(ev) {\n  this.cursor.position(ev.offsetX, ev.offsetY) \n\n  this.emit('data', this.position_from_event(ev))\n}\n\nproto.handle_move = function(ev) {\n  this.emit('move', this.position_from_event(ev)) \n}\n\nproto.position_from_event = function(ev) {\n  return {\n      x: ev.offsetX / this.x_extent\n    , y: (this.y_extent - ev.offsetY) / this.y_extent\n  }\n}\n\n//@ sourceURL=/node_modules/fffield/index.js"));

require.define("/node_modules/fffield/cursor.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = Cursor\n\nfunction Cursor(el, x, y) {\n  this.x = 0 \n  this.y = 0\n  this.el = this.create_cursor(el)\n\n  this.position(x || 0, y || 0)\n}\n\nvar cons = Cursor\n  , proto = cons.prototype\n\nproto.classname = 'cursor'\n\nproto.x_free = 1\nproto.y_free = 1\n\nproto.position = function(x, y) {\n  this.x = x\n  this.y = y\n\n  if(this.el.clientWidth && this.el.clientHeight) {\n    x = x - this.el.clientWidth / 2\n    y = y - this.el.clientHeight / 2\n  }\n\n  this.el.style.top = (this.y_free * y)+'px'\n  this.el.style.left = (this.x_free * x)+'px'\n}\n\nproto.create_cursor = function(el) {\n  var new_element = el.ownerDocument.createElement('div')\n  new_element.setAttribute('class', this.classname)\n  el.appendChild(new_element)\n  return new_element\n}\n\n//@ sourceURL=/node_modules/fffield/cursor.js"));

require.define("/node_modules/domnode-dom/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/node_modules/domnode-dom/package.json"));

require.define("/node_modules/domnode-dom/index.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = require('./lib/index')\n\n//@ sourceURL=/node_modules/domnode-dom/index.js"));

require.define("/node_modules/domnode-dom/lib/index.js",Function(['require','module','exports','__dirname','__filename','process'],"var WriteStream = require('./writable')\n  , ReadStream = require('./readable')\n  , DOMStream = {}\n\nDOMStream.WriteStream = WriteStream\nDOMStream.ReadStream = ReadStream\n\nDOMStream.createAppendStream = function(el, mimetype) {\n  return new DOMStream.WriteStream(\n      el\n    , DOMStream.WriteStream.APPEND\n    , mimetype\n  )\n}\n\nDOMStream.createWriteStream = function(el, mimetype) {\n  return new DOMStream.WriteStream(\n      el\n    , DOMStream.WriteStream.WRITE\n    , mimetype\n  )\n}\n\nDOMStream.createReadStream =\nDOMStream.createEventStream = function(el, type, preventDefault) {\n  preventDefault = preventDefault === undefined ? true : preventDefault\n\n  return new DOMStream.ReadStream(\n      el\n    , type\n    , preventDefault\n  )\n}\n\nmodule.exports = DOMStream\n\n\n//@ sourceURL=/node_modules/domnode-dom/lib/index.js"));

require.define("/node_modules/domnode-dom/lib/writable.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = DOMStream\n\nvar Stream = require('stream').Stream\n\nfunction DOMStream(el, mode, mimetype) {\n  this.el = el\n  this.mode = mode\n  this.mimetype = mimetype || 'text/html'\n\n  Stream.call(this)\n}\n\nvar cons = DOMStream\n  , proto = cons.prototype = new Stream\n\nproto.constructor = cons\n\ncons.APPEND = 0\ncons.WRITE = 1\n\nproto.writable = true\n\nproto.setMimetype = function(mime) {\n  this.mimetype = mime\n}\n\nproto.write = function(data) {\n  var result = (this.mode === cons.APPEND) ? this.append(data) : this.insert(data)\n  this.emit('data', this.el.childNodes)\n  return result\n}\n\nproto.insert = function(data) {\n  this.el.innerHTML = ''\n  return this.append(data)\n}\n\nproto.append = function(data) {\n  var result = this[this.resolveMimetypeHandler()](data)\n\n  for(var i = 0, len = result.length; i < len; ++i) {\n    this.el.appendChild(result[i])\n  }\n\n  return true\n}\n\nproto.resolveMimetypeHandler = function() {\n  var type = this.mimetype.replace(/(\\/\\w)/, function(x) {\n    return x.slice(1).toUpperCase()\n  })\n  type = type.charAt(0).toUpperCase() + type.slice(1)\n\n  return 'construct'+type\n}\n\nproto.constructTextHtml = function(data) {\n  var isTableFragment = /(tr|td|th)/.test(data) && !/table/.test(data)\n    , div\n\n  if(isTableFragment) {\n    // wuh-oh.\n    div = document.createElement('table')\n  }\n\n  div = div || document.createElement('div')\n  div.innerHTML = data \n\n  return [].slice.call(div.childNodes)\n}\n\nproto.constructTextPlain = function(data) {\n  var textNode = document.createTextNode(data)\n\n  return [textNode]\n}\n\n//@ sourceURL=/node_modules/domnode-dom/lib/writable.js"));

require.define("/node_modules/domnode-dom/lib/readable.js",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = DOMStream\n\nvar Stream = require('stream').Stream\n\nvar listener = function(el, type, onmsg) {\n  return el.addEventListener(type, onmsg, false)\n}\n\nif(typeof $ !== 'undefined')\n  listener = function(el, type, onmsg) {\n    return el = $(el)[type](onmsg)\n  }\n\nif(!document.createElement('div').addEventListener)\n  listener = function(el, type, onmsg) {\n    return el.attachEvent('on'+type, onmsg)\n  }\n\nfunction DOMStream(el, eventType, shouldPreventDefault) {\n  this.el = el\n  this.eventType = eventType\n  this.shouldPreventDefault = shouldPreventDefault\n\n  var self = this\n\n  if(el && this.eventType)\n    listener(\n        this.el\n      , this.eventType\n      , function() { return self.listen.apply(self, arguments) }\n    )\n\n  Stream.call(this)\n}\n\nvar cons = DOMStream\n  , proto = cons.prototype = new Stream\n\nproto.constructor = cons\n\nproto.listen = function(ev) { \n  if(this.shouldPreventDefault)\n    ev.preventDefault ? ev.preventDefault() : (ev.returnValue = false)\n\n  var collectData = \n    this.eventType === 'submit' ||\n    this.eventType === 'change' ||\n    this.eventType === 'keydown' ||\n    this.eventType === 'keyup'\n\n  if(collectData) {\n    if(this.el.tagName.toUpperCase() === 'FORM')\n      return this.handleFormSubmit(ev)\n\n    return this.emit('data', valueFromElement(this.el))\n  }\n\n  this.emit('data', ev) \n}\n\nproto.handleFormSubmit = function(ev) {\n  var elements = []\n\n  if(this.el.querySelectorAll) {\n    elements = this.el.querySelectorAll('input,textarea,select')\n  } else {\n    var inputs = {'INPUT':true, 'TEXTAREA':true, 'SELECT':true}\n\n    var recurse = function(el) {\n      for(var i = 0, len = el.childNodes.length; i < len; ++i) {\n        if(el.childNodes[i].tagName) {\n          if(inputs[el.childNodes[i].tagName.toUpperCase()]) {\n            elements.push(el)\n          } else {\n            recurse(el.childNodes[i])\n          }\n        }\n      }\n    }\n\n    recurse(this.el)\n  }\n\n  var output = {}\n    , attr\n    , val\n\n  for(var i = 0, len = elements.length; i < len; ++i) {\n    attr = elements[i].getAttribute('name')\n    val = valueFromElement(elements[i])\n\n    output[attr] = val\n  }\n\n  return this.emit('data', output)\n}\n\nfunction valueFromElement(el) {\n  switch(el.getAttribute('type')) {\n    case 'radio':\n      return el.checked ? el.value : null\n    case 'checkbox':\n      return 'data', el.checked\n  }\n  return el.value\n}\n\n//@ sourceURL=/node_modules/domnode-dom/lib/readable.js"));

require.define("/node_modules/through/package.json",Function(['require','module','exports','__dirname','__filename','process'],"module.exports = {\"main\":\"index.js\"}\n//@ sourceURL=/node_modules/through/package.json"));

require.define("/node_modules/through/index.js",Function(['require','module','exports','__dirname','__filename','process'],"var Stream = require('stream')\n\n// through\n//\n// a stream that does nothing but re-emit the input.\n// useful for aggregating a series of changing but not ending streams into one stream)\n\n\n\nexports = module.exports = through\nthrough.through = through\n\n//create a readable writable stream.\n\nfunction through (write, end) {\n  write = write || function (data) { this.emit('data', data) }\n  end = end || function () { this.emit('end') }\n\n  var ended = false, destroyed = false\n  var stream = new Stream(), buffer = []\n  stream.buffer = buffer\n  stream.readable = stream.writable = true\n  stream.paused = false  \n  stream.write = function (data) {\n    write.call(this, data)\n    return !stream.paused\n  }\n\n  function drain() {\n    while(buffer.length && !stream.paused) {\n      var data = buffer.shift()\n      if(null === data)\n        return stream.emit('end')\n      else\n        stream.emit('data', data)\n    }\n  }\n\n  stream.queue = function (data) {\n    buffer.push(data)\n    drain()\n  }\n\n  //this will be registered as the first 'end' listener\n  //must call destroy next tick, to make sure we're after any\n  //stream piped from here. \n  //this is only a problem if end is not emitted synchronously.\n  //a nicer way to do this is to make sure this is the last listener for 'end'\n\n  stream.on('end', function () {\n    stream.readable = false\n    if(!stream.writable)\n      process.nextTick(function () {\n        stream.destroy()\n      })\n  })\n\n  function _end () {\n    stream.writable = false\n    end.call(stream)\n    if(!stream.readable)\n      stream.destroy()\n  }\n\n  stream.end = function (data) {\n    if(ended) return \n    ended = true\n    if(arguments.length) stream.write(data)\n    if(!buffer.length) _end()\n  }\n\n  stream.destroy = function () {\n    if(destroyed) return\n    destroyed = true\n    ended = true\n    buffer.length = 0\n    stream.writable = stream.readable = false\n    stream.emit('close')\n  }\n\n  stream.pause = function () {\n    if(stream.paused) return\n    stream.paused = true\n    stream.emit('pause')\n  }\n  stream.resume = function () {\n    if(stream.paused) {\n      stream.paused = false\n    }\n    drain()\n    //may have become paused again,\n    //as drain emits 'data'.\n    if(!stream.paused)\n      stream.emit('drain')\n  }\n  return stream\n}\n\n\n//@ sourceURL=/node_modules/through/index.js"));

require.define("/test/example.js",Function(['require','module','exports','__dirname','__filename','process'],"var color = require('onecolor')\n  , picker = require('../index')\n  , domnode = require('domnode-dom')\n  , through = require('through')\n\nvar e = document.getElementById('content')\n  , o = document.getElementById('color')\n  , s = document.getElementById('mode')\n  , c = color('#FF00FF')\n  , p = picker(e, c, s.value)\n\nvar toHTML = through(function(color) {\n  this.emit('data', div(color))\n})\n\n// yay piping!\ndomnode\n  .createReadStream(s, 'change', false)\n  .on('data', function(v) { p.set_mode(v) })    \n\np.pipe(toHTML)\n .pipe(domnode.createWriteStream(o, 'text/html'))\n\n// prime the color output.\ntoHTML.write(c)\n\nfunction div(color) {\n  return '<div style=\"width:100%; height:100%; background:'+color.hex()+'\"></div>'\n}\n\n//@ sourceURL=/test/example.js"));
require("/test/example.js");
})();
